struct tm {
    int tm_sec;   // 秒数 (0 ~ 59)
    int tm_min;   // 分钟数 (0 ~ 59)
    int tm_hour;  // 小时数 (0 ~ 23)
    int tm_mday;  // 一月中的第几天 (1 ~ 31)
    int tm_mon;   // 月份 (0 ~ 11)
    int tm_year;  // 年份 (自 1900 年起)
    int tm_wday;  // 一周中的第几天 (0 ~ 6，0 表示周日)
    int tm_yday;  // 一年中的第几天 (0 ~ 365，0 表示一月一日)
    int tm_isdst; // 夏令时标志
};
    struct timeval   tv;
    struct tm        tm;
    time_t           sec;   //秒


    memset(&tv,0,sizeof(struct timeval));
    memset(&tm,0,sizeof(struct tm));

    gettimeofday(&tv, NULL);     //获取当前时间，返回自1970-01-01 00:00:00到现在经历的秒数【第二个参数是时区，一般不关心】

    sec = tv.tv_sec;             //秒
    localtime_r(&sec, &tm);      //把参数1的time_t转换为本地时间，保存到参数2中去，带_r的是线程安全的版本，尽量使用
    tm.tm_mon++;                 //月份要调整下正常
    tm.tm_year += 1900;          //年份要调整下才正常

在 C 语言中，可以使用 time 函数获取当前时间的秒数，然后使用 localtime 或 gmtime 函数将其转换为 tm 结构体表示的日期和时间。
    time_t t = time(NULL);
    struct tm* tm_info = localtime(&t);
    printf("Current date and time: %s", asctime(tm_info));




